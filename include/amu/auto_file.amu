/+

  generate an incrementing file name for the current input. the auto
  file global variable should be incremented before use.

    example use:

    \amu_define auto_file_debug (true)
    \amu_define auto_file_extensions (svg png stl)
    \amu_include (include/amu/auto_file.amu)

    ...

    \amu_eval auto_file_name (extension=svg auto_file_index++ ${auto_file})

    \verbatim
      file name = [\amu_eval(${auto_file_name})]
    \endverbatim

  requires:
    none.

 +/

  /+

    amu build directory

   +/

  \amu_if auto_prefix (-z ${AUTO_CONFIG_PATH})
    {auto_file/${PATH_NAME}}
  else
    {${AUTO_CONFIG_PATH}auto_file/${PATH_NAME}}
  endif

  \amu_eval
    auto_prefix
    (${auto_prefix})

  \amu_define
    auto_path
    (${auto_prefix}/${extension})

  \amu_define
    auto_file
    (${auto_path}/${STEM_NAME}_af${auto_file_index}.${extension})

  \amu_define
    auto_file_index
    (0)

  /+

    assign empty string to 'auto_file_extensions' when not defined and
    create an output directory for all declared extensions.

   +/

  \amu_if auto_file_extensions ( ! -d "${auto_file_extensions}" )
    {}
  else
    {${auto_file_extensions}}
  endif

  \amu_filesystem
    auto_file_dirs
    (
      parent=${auto_prefix}
      mkdirp=${auto_file_extensions}
      ++verbose
    )

  /+

    show configuration summary when 'auto_file_debug' defined 'true'.

   +/

  \amu_if ( "${auto_file_debug}" == "true" )
  {
    <b>auto_file configuration</b>

    \verbatim
    output type = amu
     extensions = ${auto_file_extensions}
         prefix = ${auto_prefix}
           stem = ${STEM_NAME}
          index = ${auto_file_index}

     mkdirp out = ${auto_file_dirs}
    \endverbatim
  }
  endif


/+ end of file  +/
